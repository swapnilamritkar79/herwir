{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template calendar/upcoming_mini

    Calendar upcoming view for blocks.

    The purpose of this template is to render the upcoming view for blocks.

    Classes required for JS:
    * none

    Data attributes required for JS:
    * none

    Example context (json):
    {
    }
}}

<style>
.upcomevent .slick-slide 
{
	min-width:300px !important;
}
</style>
<div id="allview" class="viewall"><a href="../calendar/view.php?view=upcoming">View All</a></div>
<div id="upcoming-mini-{{uniqid}}" data-region=#upcoming-mini" class="upcomevent"> 
				 
			<div class=" card-text content calendarwrapper"{{!
			    }} id="month-upcoming-mini-{{uniqid}}"{{!
			    }} data-context-id="{{defaulteventcontext}}"{{!
			    }} data-courseid="{{courseid}}"{{!
			    }} data-categoryid="{{categoryid}}"{{!
			}}>
			    {{> core/overlay_loading}}
			    <div class="responsive">
				
			    {{#events}}
				<div class="coursehold">
			    <div class="courecontent"> 	
			        <div class-"name" {{!
			            }} class="event"{{!
			            }} data-eventtype-{{calendareventtype}}="1"{{!
			            }} data-region="event-item"{{!
			        }}>
			            <span>{{#icon}}{{#pix}} {{key}}, {{component}}, {{alttext}} {{/pix}}{{/icon}}</span>
			            <a{{!
			                }} data-type="event"{{!
			                }} data-action="view-event"{{!
			                }} data-event-id="{{id}}"{{!
			                }} href="{{viewurl}}"{{!
			            }}>{{{name}}}</a>
			            <div class="time"><i class="far fa-clock"></i>{{{formattedtime}}}</div>
			            <div class="time"><i class="fa fa-map-marker-alt"></i> {{location}}</div>
			            <div class="event-img">{{{desc_img}}}</div>
			           <div class="dec">{{{desc_text}}} </div>
			            
			        </div>
			       </div>
				   </div>
			    {{/events}}</div>
			    {{^events}}
			        {{#str}}noupcomingevents, calendar{{/str}}
			    {{/events}}
			
			
	</div>

</div>
{{#js}}


require([
    'jquery',
    'core_calendar/selectors',
    'core_calendar/events',
    
], function(
    $,
    CalendarSelectors,
    CalendarEvents,
) {
    var root = $('#month-upcoming-mini-{{uniqid}}');

    $('body').on(CalendarEvents.filterChanged, function(e, data) {
        M.util.js_pending("month-upcoming-mini-{{uniqid}}-filterChanged");

        // A filter value has been changed.
        // Find all matching cells in the popover data, and hide them.
        var target = $("#month-upcoming-mini-{{uniqid}}").find(CalendarSelectors.eventType[data.type]);

        var transitionPromise = $.Deferred();
        if (data.hidden) {
            transitionPromise.then(function() {
                return target.slideUp('fast').promise();
            });
        } else {
            transitionPromise.then(function() {
                return target.slideDown('fast').promise();
            });
        }

        transitionPromise.then(function() {
            M.util.js_complete("month-upcoming-mini-{{uniqid}}-filterChanged");

            return;
        });

        transitionPromise.resolve();
    });
});
{{/js}}
<style>
a[data-action="view-event"] {
    color: #4cc0af;
}
</style>
